{"version":3,"sources":["hooks/useTheme.ts","context/ThemeContext.tsx","hooks/useOnline.ts","helpers/translations.ts","context/TranslateContext.tsx","styles/globalStyles.tsx","components/Switch.tsx","components/Wrapper.tsx","components/Header.tsx","components/LanguagesBar.tsx","hooks/useSpeechSynthesis.ts","hooks/useSpeechRecognition.ts","styles/mixins.ts","components/TextBox.tsx","components/BtnIcon.tsx","components/BtnWithPlayState.tsx","components/SourceBox.tsx","components/ResultBox.tsx","helpers/clipboard.ts","styles/animations.ts","components/Alert.tsx","components/Translator.tsx","pages/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useTheme","useState","theme","setTheme","useEffect","handleColorScheme","e","matches","lsTheme","window","localStorage","getItem","mql","matchMedia","addEventListener","removeEventListener","setItem","document","body","className","ThemeContext","createContext","ThemeProvider","children","Provider","value","useOnline","navigator","onLine","isOnline","setOnline","console","log","updateOnlineState","en","Map","es","TranslateContext","TranslateProvider","sourceText","setSourceText","resultText","setResultText","source","result","languageInfo","setLanguageInfo","translate","useCallback","text","dictionary","get","timeoutID","useRef","clearTimeout","current","trim","setTimeout","clearText","setText","swapLanguages","aux","sourcetAux","GlobalStyles","createGlobalStyle","StyledSwitch","styled","label","on","Switch","useContext","onChange","currentTarget","checked","type","Wrapper","div","Title","h1","HeaderContent","Header","StyledBar","LanguageList","ul","LanguageItem","li","SwapLanguage","button","LanguagesBar","sourceLanguage","resultLanguage","handleSourceClick","event","language","dataset","lang","handleResultClick","onClick","data-lang","aria-label","data-title","color","size","useSpeechSynthesis","undefined","speechSynthesis","onEnd","utterance","SpeechSynthesisUtterance","onend","speak","cancel","useSpeechRecognition","isSupported","SpeechRecognition","isSupportedWithPrefix","webkitSpeechRecognition","speech","start","results","Array","from","transcript","onSpeak","abort","textBoxStyles","css","TextBox","Actions","TextArea","textarea","BtnIcon","show","BtnWithPlayState","icon","title","onCancel","isPlaying","setPlaying","CharactersCounter","span","BtnClear","SourceBox","charactersLimit","isSpeechSynthesisSupported","textToSpeech","cancelSpeechSynthesis","isSpeechRecognitionSupported","startSpeechRecognition","abortSpeechRecognition","length","data-tooltip-pos","maxLength","substring","ResultBox","textAreaRef","ref","defaultValue","readOnly","placeholder","element","clipboard","writeText","Promise","res","select","execCommand","getSelection","removeAllRanges","showAlertAnimation","keyframes","hideAlertAnimation","colors","success","error","StyledAlert","severity","AlertMessage","icons","Alert","shouldRender","setRender","onAnimationEnd","role","StyledTranslator","main","Grid","Translator","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4KAuCeA,EAnCE,WAChB,MAA0BC,mBAAmB,QAA7C,mBAAOC,EAAP,KAAcC,EAAd,KA+BA,OA7BAC,qBAAU,WACT,IAAMC,EAAoB,SAACC,GAC1BH,EAASG,EAAEC,QAAU,QAAU,SAG1BC,EAAUC,OAAOC,aAAaC,QAAQ,wBAE5C,GAAgB,UAAZH,EAAJ,CAIA,IAAMI,EAAsBH,OAAOI,WAClC,iCASD,OANID,EAAIL,SACPJ,EAAS,SAGVS,EAAIE,iBAAiB,SAAUT,GAExB,kBAAMO,EAAIG,oBAAoB,SAAUV,IAb9CF,EAASK,KAcR,IAEHJ,qBAAU,WACTK,OAAOC,aAAaM,QAAQ,uBAAwBd,GACpDe,SAASC,KAAKC,UAAYjB,IACxB,CAACA,IAEG,CAACA,EAAOC,I,OC3BHiB,EAAeC,wBAAc,IAE7BC,EAAgB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAC/B,EAA0BvB,IAA1B,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACC,cAACiB,EAAaI,SAAd,CACCC,MAAO,CACNvB,QACAC,YAHF,SAMEoB,KCCWG,EApBG,WACjB,MAA8BzB,mBAASQ,OAAOkB,UAAUC,QAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OAdAC,QAAQC,IAAI,YAAaH,GAEzBzB,qBAAU,WACT,IAAM6B,EAAoB,kBAAMH,EAAUrB,OAAOkB,UAAUC,SAK3D,OAHAnB,OAAOK,iBAAiB,SAAUmB,GAClCxB,OAAOK,iBAAiB,UAAWmB,GAE5B,WACNxB,OAAOM,oBAAoB,SAAUkB,GACrCxB,OAAOM,oBAAoB,UAAWkB,MAErC,IAEIJ,GCnBKK,EAAK,IAAIC,IAAoB,CACzC,CAAC,QAAS,QACV,CAAC,cAAe,cAChB,CAAC,WAAY,UACb,CAAC,iBAAkB,gBACnB,CAAC,MAAO,SACR,CAAC,SAAU,WACX,CAAC,QAAS,YAGEC,EAAK,IAAID,IAAoB,CACzC,CAAC,OAAQ,SACT,CAAC,aAAc,eACf,CAAC,SAAU,YACX,CAAC,eAAgB,kBACjB,CAAC,QAAS,OACV,CAAC,UAAW,UACZ,CAAC,SAAU,WCSCE,EAAmBhB,wBAAc,IAEjCiB,EAAoB,SAAC,GAA2C,IAAzCf,EAAwC,EAAxCA,SACnC,EAAoCtB,mBAAS,IAA7C,mBAAOsC,EAAP,KAAmBC,EAAnB,KAEA,EAAoCvC,mBAAS,IAA7C,mBAAOwC,EAAP,KAAmBC,EAAnB,KAEA,EAAwCzC,mBAAuB,CAC9D0C,OAAQ,QACRC,OAAQ,UAFT,mBAAOC,EAAP,KAAqBC,EAArB,KAgBMC,EAAYC,uBACjB,SAACC,GACA,IAAML,EACmB,UAAxBC,EAAaF,OACVO,EAAcC,IAAIF,IAAS,GAC3BC,EAAcC,IAAIF,IAAS,GAE/BT,EAAcS,GACdP,EAAcE,KAEf,CAACC,EAAaF,SAGfvC,qBAAU,WACU,KAAfmC,GAAmBG,EAAc,MACnC,CAACH,EAAYQ,IAEhB,IAAMK,EAAYC,iBAAe,MAE3BxB,EAAWH,IAajB,OAVAtB,qBAAU,WAETK,OAAO6C,aAAaF,EAAUG,SACzB1B,GAAaU,EAAWiB,SAE7BJ,EAAUG,QAAU9C,OAAOgD,YAAW,WACrCV,EAAUR,KACR,QACD,CAACV,EAAUU,EAAYQ,IAGzB,cAACV,EAAiBb,SAAlB,CACCC,MAAO,CACNI,WACAgB,eACAJ,aACAF,aACAmB,UAzCe,kBAAMlB,EAAc,KA0CnCM,kBACAa,QAASnB,EACToB,cArDmB,WACrB,IAAMC,EAAoBhB,EAAaF,OACtCmB,EAAqBvB,EAEtBO,EAAgB,CAAEH,OAAQE,EAAaD,OAAQA,OAAQiB,IACvDrB,EAAcC,GACdC,EAAcoB,IAgDZf,aAVF,SAaExB,K,cC1BWwC,EAnEMC,YAAH,4jDCMZC,EAAeC,IAAOC,MAAV,2eACG,qBAAGC,GAAe,uBAAyB,aAqCjDC,I,MAAAA,EAff,YAAsC,IAApBD,EAAmB,EAAnBA,GACTjE,EAAamE,qBAAWlD,GAAxBjB,SAMR,OACC,eAAC8D,EAAD,CAAcG,GAAIA,EAAlB,UACC,uBAAOG,SANY,SAACjE,GACrBH,EAASG,EAAEkE,cAAcC,QAAU,OAAS,UAKZC,KAAK,WAAWD,QAASL,IACxD,sBAAMjD,UAAU,qBChCJwD,EAPCT,IAAOU,IAAV,yGCIPC,EAAQX,IAAOY,GAAV,yFAMLC,EAAgBb,IAAOU,IAAV,yGAqBJI,I,QAAAA,EAff,WACC,IAAQ9E,EAAUoE,qBAAWlD,GAArBlB,MAER,OACC,iCACC,cAAC,EAAD,UACC,eAAC6E,EAAD,WACC,cAACF,EAAD,wBACA,cAAC,EAAD,CAAQT,GAAc,SAAVlE,Y,OCdX+E,EAAYf,IAAOU,IAAV,yLASTM,EAAehB,IAAOiB,GAAV,qKAWZC,EAAelB,IAAOmB,GAAV,ilBA6BZC,EAAepB,IAAOqB,OAAV,6PAoFHC,I,UAAAA,EAtEf,YAKuB,IAJtBC,EAIqB,EAJrBA,eACAC,EAGqB,EAHrBA,eACA9B,EAEqB,EAFrBA,cACAd,EACqB,EADrBA,gBAEM6C,EAAoB,SAACC,GAC1B,IAAMC,EAAWD,EAAMpB,cAAcsB,QAAQC,KACzCF,IAAaH,EAIjB5C,EAAgB,CAAEF,OAAQ8C,EAAgB/C,OAAQkD,IAHjDjC,KAMIoC,EAAoB,SAACJ,GAC1B,IAAMC,EAAWD,EAAMpB,cAAcsB,QAAQC,KACzCF,IAAaJ,EAIjB3C,EAAgB,CAAEH,OAAQ8C,EAAgB7C,OAAQiD,IAHjDjC,KAMF,OACC,eAACqB,EAAD,WACC,eAACC,EAAD,WAEC,cAACE,EAAD,CACCa,QAASN,EACTO,YAAU,QACV/E,UAA8B,UAAnBsE,EAA6B,WAAa,GAHtD,qBAOA,cAACL,EAAD,CACCa,QAASN,EACTO,YAAU,QACV/E,UAA8B,UAAnBsE,EAA6B,WAAa,GAHtD,wBAQD,cAACH,EAAD,CACCa,aAAW,gBACXC,aAAW,gBACXH,QAASrC,EAHV,SAKC,cAAC,IAAD,CAAayC,MAAM,eAAeC,KAAK,SAExC,eAACpB,EAAD,WACC,cAACE,EAAD,CACCa,QAASD,EACTE,YAAU,QACV/E,UAA8B,UAAnBuE,EAA6B,WAAa,GAHtD,qBAOA,cAACN,EAAD,CACCa,QAASD,EACTE,YAAU,QACV/E,UAA8B,UAAnBuE,EAA6B,WAAa,GAHtD,4BClHWa,EAnBY,SAC1BtD,EACA4C,GAcA,MAAO,MAZiDW,IAA3B/F,OAAOgG,gBAEf,SAACC,GACrB,IAAMC,EACL,IAAIC,yBAAyB3D,GAC9B0D,EAAUE,MAAQH,EAClBC,EAAUZ,KAAOF,EACjBpF,OAAOgG,gBAAgBK,MAAMH,IAGA,kBAAMlG,OAAOgG,gBAAgBM,YCiC7CC,EA7Cc,SAC5BnB,EACAlC,GAEA,IAAMsD,OAA2CT,IAA7B/F,OAAOyG,kBAC1BC,OAC6CX,IAA3C/F,OAAe2G,wBAEdC,EAASJ,EACV,IAAIC,kBACJC,EACA,IAAK1G,OAAe2G,wBACpB,GA0BH,MAAO,CACNH,GAAeE,EAZe,SAACT,GAC/BW,EAAOtB,KAAOF,EACd9D,QAAQC,IAAIqF,GACZA,EAAOC,QACPD,EAAOvG,iBAAiB,UAAU,SAACR,GAAD,OAjBnB,SAAC,EAEhBoG,GACK,IAFHa,EAEE,EAFFA,QAGFxF,QAAQC,IAAI,UACZD,QAAQC,IAAIuF,GACZ,MAAiBC,MAAMC,KAAKF,EAAQ,IACjCG,EADH,oBACGA,WACH3F,QAAQC,IAAI0F,GACZ/D,EAAQ+D,GACRhB,IAQCiB,CAAQrH,EAAGoG,OAIkB,kBAAMW,EAAOO,WCpChCC,EAAgBC,YAAH,qKCCpBC,EAAU7D,IAAOU,IAAV,mCACViD,GAGUG,EAAU9D,IAAOU,IAAV,sEAKPqD,EAAW/D,IAAOgE,SAAV,ycAoCNH,IC5BAI,EAdCjE,IAAOqB,OAAV,+PASD,oBAAG6C,KAAH,qBAA6B,IAAM,OAChC,oBAAGA,KAAH,qBAA6B,UAAY,YCiCzCC,I,MAAAA,GApCf,YAO2B,IAN1BC,EAMyB,EANzBA,KACAnE,EAKyB,EALzBA,MACAoE,EAIyB,EAJzBA,MACAH,EAGyB,EAHzBA,KACAnC,EAEyB,EAFzBA,QACAuC,EACyB,EADzBA,SAEA,EAAgCvI,oBAAS,GAAzC,mBAAOwI,EAAP,KAAkBC,EAAlB,KAcA,OACC,8BACC,cAAC,EAAD,CACCzC,QAfgB,SAAC3F,GACnBoI,GAAYD,GACRA,EACHD,IAIDvC,GAAQ,WACPyC,GAAW,OAQVN,KAAMA,EACNjC,aAAYhC,EACZiC,aAAYmC,EAJb,SAMEE,EAAY,cAAC,IAAD,CAAQnC,KAAK,KAAKD,MAAM,iBAAoBiC,OChCvDK,GAAoBzE,IAAO0E,KAAV,oDAIjBC,GAAW3E,YAAOiE,EAAPjE,CAAH,+GA8EC4E,OAvEf,YAAqD,IAAhCjD,EAA+B,EAA/BA,SAEdkD,EAAkB,IAExB,EAIIzE,qBAAWjC,GAHFY,EADb,EACCV,WACAmB,EAFD,EAECA,UACAC,EAHD,EAGCA,QASD,EACC4C,EAAmBtD,EAAM4C,GAD1B,mBAAOmD,EAAP,KAAmCC,EAAnC,KAAiDC,EAAjD,KAGA,EAIIlC,EAAqBnB,EAAUlC,GAJnC,mBACCwF,EADD,KAECC,EAFD,KAGCC,EAHD,KAMA,OACC,eAAC,EAAD,WACC,cAACR,GAAD,CACCT,KAAMnF,EAAKqG,OAAS,EACpBnD,aAAW,oBACXC,aAAW,oBACXmD,mBAAiB,QACjBtD,QAASvC,EALV,SAOC,cAAC,IAAD,CAAS4C,KAAK,KAAKD,MAAM,mBAE1B,cAAC4B,EAAD,CACCuB,UAAWT,EACXxE,SA5BkB,SAAC,GAEmB,IADxCC,EACuC,EADvCA,cAEAb,EAAQa,EAAc/C,MAAMgI,UAAU,EAAGV,KA0BvCtH,MAAOwB,EACPkD,aAAW,0BAEZ,eAAC6B,EAAD,WACEmB,GACA,cAAC,GAAD,CACCb,KAAM,cAAC,IAAD,CAAOhC,KAAK,KAAKD,MAAM,iBAC7BlC,MAAM,qBACNoE,MAAM,qBACNtC,QAASmD,EACTZ,SAAUa,IAIXL,GACA,cAAC,GAAD,CACCV,KAAM,cAAC,IAAD,CAAYhC,KAAK,KAAKD,MAAM,iBAClClC,MAAM,SACNiE,KAAMnF,EAAKqG,OAAS,EACpBf,MAAM,SACNtC,QAASgD,EACTT,SAAUU,IAGZ,eAACP,GAAD,WACE1F,EAAKqG,OADP,MACkBP,YCjCPW,I,YAAAA,GA3Cf,YAAqD,IAAhC7D,EAA+B,EAA/BA,SACZpD,EAAe6B,qBAAWjC,GAA1BI,WAEFkH,EAActG,iBAA4B,MAEhD,EACCkD,EAAmB9D,EAAYoD,GADhC,mBAAOmD,EAAP,KAAmCC,EAAnC,KAAiDC,EAAjD,KAGA,OACC,eAAC,EAAD,WACC,cAACjB,EAAD,CACC2B,IAAKD,EACLE,aAAcpH,EACdqH,UAAU,EACVC,YAAY,cACZ5D,aAAW,gBAEZ,eAAC6B,EAAD,WACEgB,GACA,cAAC,GAAD,CACCV,KAAM,cAAC,IAAD,CAAYhC,KAAK,KAAKD,MAAM,iBAClClC,MAAM,SACNiE,KAAM3F,EAAW6G,OAAS,EAC1Bf,MAAM,SACNtC,QAASgD,EACTT,SAAUU,IAGZ,cAAC,EAAD,CACCd,KAAM3F,EAAW6G,OAAS,EAC1BnD,aAAW,mBACXC,aAAW,mBACXH,QAAS,kBCzCbhD,ED0CoBR,ECzCpBuH,EDyCgCL,EAAYpG,aCvCTiD,IAA/B/F,OAAOkB,UAAUsI,UACbxJ,OAAOkB,UAAUsI,UAAUC,UAAUjH,GAEtC,IAAIkH,SAAQ,SAACC,GAAS,IAAD,EAC3BJ,EAAQK,SACR5J,OAAOQ,SAASqJ,YAAY,QAC5B,UAAA7J,OAAO8J,sBAAP,SAAuBC,kBACvBJ,OAXkB,IACnBnH,EACA+G,GDoCG,SAQC,cAAC,IAAD,CAAe1D,KAAK,KAAKD,MAAM,0BE5CvBoE,GAAqBC,YAAH,4FASlBC,GAAqBD,YAAH,6FCIzBE,GAAS,CACdC,QAAS,CAAC,uBAAwB,2BAClCC,MAAO,CAAC,qBAAsB,0BAGzBC,GAAc7G,IAAOU,IAAV,8WAEP,gBAAGoG,EAAH,EAAGA,SAAH,OAAkBJ,GAAOI,GAAU,MACxB,gBAAGA,EAAH,EAAGA,SAAH,OAAkBJ,GAAOI,GAAU,MAa1C,qBAAG5C,KAAmBqC,GAAqBE,MAInDM,GAAe/G,IAAO0E,KAAV,oDAIZsC,GAAQ,CACbL,QAAS,cAAC,IAAD,CAAevE,KAAK,KAAKD,MAAM,iBACxCyE,MAAO,cAAC,IAAD,CAAgBxE,KAAK,KAAKD,MAAM,kBAkCzB8E,I,MAAAA,GA/Bf,YAKgB,IAJf5J,EAIc,EAJdA,SACA+G,EAGc,EAHdA,KAGc,IAFd0C,gBAEc,MAFH,UAEG,MADd5C,YACc,SACd,EAAkCnI,mBAASmI,GAA3C,mBAAOgD,EAAP,KAAqBC,EAArB,KAUA,OARAjL,qBAAU,WACLgI,GAAMiD,GAAU,KAClB,CAACjD,IAMCgD,EAGJ,eAACL,GAAD,CACCO,eARyB,WACrBlD,GAAMiD,GAAU,IAQpBE,KAAK,QACLP,SAAUA,EACV5C,KAAMA,EAJP,UAMEE,GAAc4C,GAAMF,GACrB,cAACC,GAAD,UAAe1J,OAVS,MCxDrBiK,GAAmBtH,IAAOuH,KAAV,iDAIhBC,GAAOxH,IAAOU,IAAV,oLAoCK+G,OA1Bf,WACC,MACCrH,qBAAWjC,GADJR,EAAR,EAAQA,SAAUgB,EAAlB,EAAkBA,aAAce,EAAhC,EAAgCA,cAAed,EAA/C,EAA+CA,gBAG/C,OACC,cAAC0I,GAAD,UACC,cAAC,EAAD,UACC,eAACE,GAAD,WACC,cAAC,GAAD,CAAOV,SAAS,QAAQ5C,MAAOvG,EAA/B,gHAIA,cAAC,EAAD,CACC4D,eAAgB5C,EAAaF,OAC7B+C,eAAgB7C,EAAaD,OAC7BgB,cAAeA,EACfd,gBAAiBA,IAElB,cAAC,GAAD,CAAW+C,SAAUhD,EAAaF,SAClC,cAAC,GAAD,CAAWkD,SAAUhD,EAAaD,iBC9BxBgJ,OATf,WACC,OACC,gCACC,cAAC,EAAD,IACA,cAAC,GAAD,QCSYC,OAXf,WACC,OACC,cAAC,EAAD,UACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,GAAD,UCIWC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDxL,SAASyL,eAAe,SAMzBZ,O","file":"static/js/main.72c0bc8f.chunk.js","sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\ntype AppTheme = 'light' | 'dark';\n\nconst useTheme = (): [AppTheme, Dispatch<SetStateAction<AppTheme>>] => {\n\tconst [theme, setTheme] = useState<AppTheme>('dark');\n\n\tuseEffect(() => {\n\t\tconst handleColorScheme = (e: MediaQueryListEvent) => {\n\t\t\tsetTheme(e.matches ? 'light' : 'dark');\n\t\t};\n\n\t\tconst lsTheme = window.localStorage.getItem('translator-app:theme');\n\n\t\tif (lsTheme === 'light') {\n\t\t\tsetTheme(lsTheme);\n\t\t\treturn;\n\t\t}\n\t\tconst mql: MediaQueryList = window.matchMedia(\n\t\t\t'(prefers-color-scheme: light)'\n\t\t);\n\n\t\tif (mql.matches) {\n\t\t\tsetTheme('light');\n\t\t}\n\n\t\tmql.addEventListener('change', handleColorScheme);\n\n\t\treturn () => mql.removeEventListener('change', handleColorScheme);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem('translator-app:theme', theme);\n\t\tdocument.body.className = theme;\n\t}, [theme]);\n\n\treturn [theme, setTheme];\n};\n\nexport default useTheme;\n","import { createContext, Dispatch, ReactNode, SetStateAction } from 'react';\nimport AppTheme from '../constants/theme';\nimport useTheme from '../hooks/useTheme';\n\ninterface ThemeContextInt {\n\ttheme: AppTheme;\n\tsetTheme: Dispatch<SetStateAction<AppTheme>>;\n}\n\nexport const ThemeContext = createContext({} as ThemeContextInt);\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n\tconst [theme, setTheme] = useTheme();\n\n\treturn (\n\t\t<ThemeContext.Provider\n\t\t\tvalue={{\n\t\t\t\ttheme,\n\t\t\t\tsetTheme,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</ThemeContext.Provider>\n\t);\n};\n","import { useEffect, useState } from 'react';\r\n\r\nconst useOnline = (): boolean => {\r\n\tconst [isOnline, setOnline] = useState(window.navigator.onLine);\r\n\r\n\tconsole.log('is online', isOnline);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst updateOnlineState = () => setOnline(window.navigator.onLine);\r\n\r\n\t\twindow.addEventListener('online', updateOnlineState);\r\n\t\twindow.addEventListener('offline', updateOnlineState);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('online', updateOnlineState);\r\n\t\t\twindow.removeEventListener('offline', updateOnlineState);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn isOnline;\r\n};\r\n\r\nexport default useOnline;\r\n","export const en = new Map<string, string>([\r\n\t['hello', 'hola'],\r\n\t['hello world', 'Hola mundo'],\r\n\t['Language', 'Idioma'],\r\n\t['Hello everyone', 'Hola a todos'],\r\n\t['Ice', 'Hielo'],\r\n\t['Markup', 'Marcado'],\r\n\t['Store', 'Tienda'],\r\n]);\r\n\r\nexport const es = new Map<string, string>([\r\n\t['hola', 'hello'],\r\n\t['Hola mundo', 'hello world'],\r\n\t['Idioma', 'Language'],\r\n\t['Hola a todos', 'Hello everyone'],\r\n\t['Hielo', 'Ice'],\r\n\t['Marcado', 'Markup'],\r\n\t['Tienda', 'Store'],\r\n]);\r\n","import {\r\n\tcreateContext,\r\n\tDispatch,\r\n\tReactNode,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from 'react';\r\nimport LanguageList, { LanguageInfo } from '../constants/languages';\r\nimport useOnline from '../hooks/useOnline';\r\nimport * as dictionary from '../helpers/translations';\r\n\r\ninterface TranslateContextInt {\r\n\tisOnline: boolean;\r\n\tlanguageInfo: LanguageInfo;\r\n\tresultText: string;\r\n\tsourceText: string;\r\n\tclearText: () => void;\r\n\tsetLanguageInfo: Dispatch<SetStateAction<LanguageInfo>>;\r\n\tsetText: Dispatch<SetStateAction<string>>;\r\n\tswapLanguages: () => void;\r\n\ttranslate: (text: string) => void;\r\n}\r\n\r\nexport const TranslateContext = createContext({} as TranslateContextInt);\r\n\r\nexport const TranslateProvider = ({ children }: { children: ReactNode }) => {\r\n\tconst [sourceText, setSourceText] = useState('');\r\n\r\n\tconst [resultText, setResultText] = useState('');\r\n\r\n\tconst [languageInfo, setLanguageInfo] = useState<LanguageInfo>({\r\n\t\tsource: 'en-US',\r\n\t\tresult: 'es-US',\r\n\t});\r\n\r\n\tconst swapLanguages = (): void => {\r\n\t\tconst aux: LanguageList = languageInfo.source,\r\n\t\t\tsourcetAux: string = sourceText;\r\n\r\n\t\tsetLanguageInfo({ source: languageInfo.result, result: aux });\r\n\t\tsetSourceText(resultText);\r\n\t\tsetResultText(sourcetAux);\r\n\t};\r\n\r\n\tconst clearText = () => setSourceText('');\r\n\r\n\tconst translate = useCallback(\r\n\t\t(text: string): void => {\r\n\t\t\tconst result: string =\r\n\t\t\t\tlanguageInfo.source === 'en-US'\r\n\t\t\t\t\t? dictionary.en.get(text) || ''\r\n\t\t\t\t\t: dictionary.es.get(text) || '';\r\n\r\n\t\t\tsetSourceText(text);\r\n\t\t\tsetResultText(result);\r\n\t\t},\r\n\t\t[languageInfo.source]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (sourceText === '') setResultText('');\r\n\t}, [sourceText, translate]);\r\n\r\n\tconst timeoutID = useRef<number>(null!);\r\n\r\n\tconst isOnline = useOnline();\r\n\r\n\t// Debouncer\r\n\tuseEffect(() => {\r\n\t\t// Limpia el timeout anterior\r\n\t\twindow.clearTimeout(timeoutID.current);\r\n\t\tif (!isOnline || !sourceText.trim()) return;\r\n\t\t// Si hay un término de mínimo 3 caracteres hace la llamada al api\r\n\t\ttimeoutID.current = window.setTimeout(() => {\r\n\t\t\ttranslate(sourceText);\r\n\t\t}, 500);\r\n\t}, [isOnline, sourceText, translate]);\r\n\r\n\treturn (\r\n\t\t<TranslateContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tisOnline,\r\n\t\t\t\tlanguageInfo,\r\n\t\t\t\tresultText,\r\n\t\t\t\tsourceText,\r\n\t\t\t\tclearText,\r\n\t\t\t\tsetLanguageInfo,\r\n\t\t\t\tsetText: setSourceText,\r\n\t\t\t\tswapLanguages,\r\n\t\t\t\ttranslate,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</TranslateContext.Provider>\r\n\t);\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  :root {\r\n    --color-bg: #121212;\r\n    --color-bg-3:#424242;\r\n    --color-text: #fff;\r\n    --color-primary: #5290f5;\r\n    --color-error: rgb(250, 179, 174);\r\n    --color-bg-error: rgb(24, 6, 5);\r\n    --color-success: rgb(183, 223, 185);\r\n    --color-bg-success: rgb(7, 17, 7);\r\n  }\r\n  @media (prefers-color-scheme: light) {\r\n    :root {\r\n      --color-bg: #fff;\r\n      --color-bg-3:#d8d8d8;\r\n      --color-text: #000;\r\n      --color-primary: #5290f5;  \r\n    }\r\n  }\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 62.5%;\r\n  }\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n  body {\r\n    background-color: var(--color-bg);\r\n    color: var(--color-text);\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 1.6rem;\r\n    line-height: 1.4;\r\n    margin: 0;\r\n  }\r\n  body.light {\r\n    --color-bg: #fff;\r\n    --color-bg-3:#d8d8d8;\r\n    --color-text: #000;\r\n    --color-primary: #5290f5;\r\n  }\r\n  @media (any-hover: hover) {\r\n    [data-title] {\r\n    position: relative;\r\n    }\r\n    [data-title]:hover::before {\r\n      content: attr(data-title);\r\n      position: absolute;\r\n      bottom: 100%;\r\n      left: 0;\r\n      display: inline-block;\r\n      padding: 0.3rem 0.6rem;\r\n      border-radius: 2px;\r\n      background: #000;\r\n      color: #fff;\r\n      font-size: 1.2rem;\r\n      font-family: inherit;\r\n      white-space: nowrap;\r\n    }\r\n    [data-title][data-tooltip-pos=\"right\"]:hover::before {\r\n      left: unset;\r\n      right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { ChangeEvent, useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\n\ninterface SwitchProps {\n\ton: boolean;\n}\n\nconst StyledSwitch = styled.label<SwitchProps>`\n\tbackground-color: ${({ on }) => (on ? 'var(--color-primary)' : '#4d4d4d')};\n\tborder-radius: 2.5rem;\n\twidth: 6rem;\n\theight: 2.5rem;\n\tpadding: 0.2rem;\n\ttransition: 0.3s ease;\n\t.switch-thumb {\n\t\tbackground-color: #fff;\n\t\tborder-radius: 50%;\n\t\tdisplay: block;\n\t\theight: 2rem;\n\t\twidth: 2rem;\n\t\ttransition: transform 0.3s ease-in;\n\t}\n\tinput[type='checkbox'] {\n\t\tdisplay: none;\n\t}\n\tinput[type='checkbox']:checked ~ .switch-thumb {\n\t\ttransform: translate3d(3.6rem, 0, 0);\n\t}\n`;\n\nfunction Switch({ on }: SwitchProps) {\n\tconst { setTheme } = useContext(ThemeContext);\n\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetTheme(e.currentTarget.checked ? 'dark' : 'light');\n\t};\n\n\treturn (\n\t\t<StyledSwitch on={on}>\n\t\t\t<input onChange={handleChange} type=\"checkbox\" checked={on} />\n\t\t\t<span className=\"switch-thumb\" />\n\t\t</StyledSwitch>\n\t);\n}\n\nexport default Switch;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n\tmax-width: 124rem;\n\tmargin: 0 auto;\n\tpadding: 0 2rem;\n\twidth: 100%;\n`;\n\nexport default Wrapper;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\nimport Switch from './Switch';\nimport Wrapper from './Wrapper';\n\nconst Title = styled.h1`\n\tcursor: default;\n\tfont-size: 3rem;\n\tfont-weight: 500;\n`;\n\nconst HeaderContent = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nfunction Header() {\n\tconst { theme } = useContext(ThemeContext);\n\n\treturn (\n\t\t<header>\n\t\t\t<Wrapper>\n\t\t\t\t<HeaderContent>\n\t\t\t\t\t<Title>Translate</Title>\n\t\t\t\t\t<Switch on={theme === 'dark'} />\n\t\t\t\t</HeaderContent>\n\t\t\t</Wrapper>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import { Dispatch, MouseEvent, SetStateAction } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdSwapHoriz } from 'react-icons/md';\r\nimport Languages, { LanguageInfo } from '../constants/languages';\r\n\r\ninterface LanguagesBarProps {\r\n\tsourceLanguage: Languages;\r\n\tresultLanguage: Languages;\r\n\tswapLanguages(): void;\r\n\tsetLanguageInfo: Dispatch<SetStateAction<LanguageInfo>>;\r\n}\r\n\r\nconst StyledBar = styled.div`\r\n\tgrid-column: 1 / -1;\r\n\tdisplay: flex;\r\n\tmargin-bottom: 3rem;\r\n\tpadding: 0 2rem;\r\n\tbox-shadow: 0 0 5px 2px var(--color-bg-3);\r\n\tborder-radius: 10rem;\r\n`;\r\n\r\nconst LanguageList = styled.ul`\r\n\tflex: 1;\r\n\tlist-style: none;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tdisplay: flex;\r\n\t&:last-of-type {\r\n\t\tjustify-content: flex-end;\r\n\t}\r\n`;\r\n\r\nconst LanguageItem = styled.li`\r\n\tborder-bottom: 3px solid transparent;\r\n\tcolor: var(--color-primary);\r\n\tcursor: pointer;\r\n\tpadding: 0.8rem 1.5rem;\r\n\ttext-align: center;\r\n\tuser-select: none;\r\n\ttransition: 0.3s ease;\r\n\tdisplay: inline-flex;\r\n\talign-items: center;\r\n\t&:hover,\r\n\t&:focus {\r\n\t\tbackground-color: var(--color-bg-3);\r\n\t}\r\n\r\n\t&:not(.selected) {\r\n\t\tdisplay: none;\r\n\t}\r\n\t@media (min-width: 56.25em) {\r\n\t\tcolor: var(--color-text);\r\n\t\t&.selected {\r\n\t\t\tborder-bottom-color: var(--color-primary);\r\n\t\t}\r\n\t\t&:not(.selected) {\r\n\t\t\tdisplay: inline-flex;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst SwapLanguage = styled.button`\r\n\tbackground-color: var(--color-primary);\r\n\tborder: none;\r\n\tborder-radius: 50%;\r\n\tcolor: #fff;\r\n\tcursor: pointer;\r\n\theight: 5rem;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\twidth: 5rem;\r\n\t/* position: relative;\r\n\ttop: -2rem; */\r\n`;\r\n\r\nfunction LanguagesBar({\r\n\tsourceLanguage,\r\n\tresultLanguage,\r\n\tswapLanguages,\r\n\tsetLanguageInfo,\r\n}: LanguagesBarProps) {\r\n\tconst handleSourceClick = (event: MouseEvent<HTMLLIElement>) => {\r\n\t\tconst language = event.currentTarget.dataset.lang as Languages;\r\n\t\tif (language === resultLanguage) {\r\n\t\t\tswapLanguages();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLanguageInfo({ result: resultLanguage, source: language });\r\n\t};\r\n\r\n\tconst handleResultClick = (event: MouseEvent<HTMLLIElement>) => {\r\n\t\tconst language = event.currentTarget.dataset.lang as Languages;\r\n\t\tif (language === sourceLanguage) {\r\n\t\t\tswapLanguages();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLanguageInfo({ source: sourceLanguage, result: language });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledBar>\r\n\t\t\t<LanguageList>\r\n\t\t\t\t{/* <LanguageItem>Detect Language</LanguageItem> */}\r\n\t\t\t\t<LanguageItem\r\n\t\t\t\t\tonClick={handleSourceClick}\r\n\t\t\t\t\tdata-lang=\"en-US\"\r\n\t\t\t\t\tclassName={sourceLanguage === 'en-US' ? 'selected' : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\tEnglish\r\n\t\t\t\t</LanguageItem>\r\n\t\t\t\t<LanguageItem\r\n\t\t\t\t\tonClick={handleSourceClick}\r\n\t\t\t\t\tdata-lang=\"es-US\"\r\n\t\t\t\t\tclassName={sourceLanguage === 'es-US' ? 'selected' : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\tSpanish\r\n\t\t\t\t</LanguageItem>\r\n\t\t\t</LanguageList>\r\n\t\t\t<SwapLanguage\r\n\t\t\t\taria-label=\"Swap Language\"\r\n\t\t\t\tdata-title=\"Swap Language\"\r\n\t\t\t\tonClick={swapLanguages}\r\n\t\t\t>\r\n\t\t\t\t<MdSwapHoriz color=\"currentColor\" size=\"28\" />\r\n\t\t\t</SwapLanguage>\r\n\t\t\t<LanguageList>\r\n\t\t\t\t<LanguageItem\r\n\t\t\t\t\tonClick={handleResultClick}\r\n\t\t\t\t\tdata-lang=\"en-US\"\r\n\t\t\t\t\tclassName={resultLanguage === 'en-US' ? 'selected' : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\tEnglish\r\n\t\t\t\t</LanguageItem>\r\n\t\t\t\t<LanguageItem\r\n\t\t\t\t\tonClick={handleResultClick}\r\n\t\t\t\t\tdata-lang=\"es-US\"\r\n\t\t\t\t\tclassName={resultLanguage === 'es-US' ? 'selected' : ''}\r\n\t\t\t\t>\r\n\t\t\t\t\tSpanish\r\n\t\t\t\t</LanguageItem>\r\n\t\t\t</LanguageList>\r\n\t\t</StyledBar>\r\n\t);\r\n}\r\n\r\nexport default LanguagesBar;\r\n","const useSpeechSynthesis = (\r\n\ttext: string,\r\n\tlanguage: string\r\n): [boolean, (onEnd: () => void) => void, () => void] => {\r\n\tconst isSupported: boolean = window.speechSynthesis !== undefined;\r\n\r\n\tconst textToSpeech = (onEnd: () => void) => {\r\n\t\tconst utterance: SpeechSynthesisUtterance =\r\n\t\t\tnew SpeechSynthesisUtterance(text);\r\n\t\tutterance.onend = onEnd;\r\n\t\tutterance.lang = language;\r\n\t\twindow.speechSynthesis.speak(utterance);\r\n\t};\r\n\r\n\tconst cancelSpeechSynthesis = () => window.speechSynthesis.cancel();\r\n\r\n\treturn [isSupported, textToSpeech, cancelSpeechSynthesis];\r\n};\r\n\r\nexport default useSpeechSynthesis;\r\n","import { Dispatch, SetStateAction } from 'react';\r\n\r\nconst useSpeechRecognition = (\r\n\tlanguage: string,\r\n\tsetText: Dispatch<SetStateAction<string>>\r\n): [boolean, (onEnd: () => void) => void, () => void] => {\r\n\tconst isSupported = window.SpeechRecognition !== undefined,\r\n\t\tisSupportedWithPrefix =\r\n\t\t\t(window as any).webkitSpeechRecognition !== undefined;\r\n\r\n\tlet speech = isSupported\r\n\t\t? new SpeechRecognition()\r\n\t\t: isSupportedWithPrefix\r\n\t\t? new (window as any).webkitSpeechRecognition()\r\n\t\t: {};\r\n\r\n\tconst onSpeak = (\r\n\t\t{ results }: SpeechRecognitionEvent,\r\n\t\tonEnd: () => void\r\n\t) => {\r\n\t\tconsole.log('on end');\r\n\t\tconsole.log(results);\r\n\t\tconst [result] = Array.from(results[0]),\r\n\t\t\t{ transcript } = result;\r\n\t\tconsole.log(transcript);\r\n\t\tsetText(transcript);\r\n\t\tonEnd();\r\n\t};\r\n\r\n\tconst startSpeechRecognition = (onEnd: () => void) => {\r\n\t\tspeech.lang = language;\r\n\t\tconsole.log(speech);\r\n\t\tspeech.start();\r\n\t\tspeech.addEventListener('result', (e: SpeechRecognitionEvent) =>\r\n\t\t\tonSpeak(e, onEnd)\r\n\t\t);\r\n\t};\r\n\r\n\tconst abortSpeechRecognition = () => speech.abort();\r\n\r\n\treturn [\r\n\t\tisSupported || isSupportedWithPrefix,\r\n\t\tstartSpeechRecognition,\r\n\t\tabortSpeechRecognition,\r\n\t];\r\n};\r\n\r\nexport default useSpeechRecognition;\r\n","import { css } from 'styled-components';\n\nexport const textBoxStyles = css`\n\tborder-radius: 2.5rem;\n\tbox-shadow: 0 0 5px 2px var(--color-bg-3);\n\theight: auto;\n\tpadding: 2rem 2rem 0;\n\tposition: relative;\n`;\n","import styled from 'styled-components';\r\nimport { textBoxStyles } from '../styles/mixins';\r\n\r\nconst TextBox = styled.div`\r\n\t${textBoxStyles};\r\n`;\r\n\r\nexport const Actions = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n\tbackground: none;\r\n\tborder: none;\r\n\tcolor: var(--color-text);\r\n\tdisplay: block;\r\n\tfont-family: inherit;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 1.6;\r\n\tmin-height: 17rem;\r\n\theight: auto;\r\n\tresize: none;\r\n\toverflow: hidden;\r\n\tpadding-bottom: 2rem;\r\n\tpadding-right: 1rem;\r\n\twidth: 100%;\r\n\t&:focus {\r\n\t\toutline: none;\r\n\t}\r\n\t&::placeholder {\r\n\t\tcolor: currentColor;\r\n\t\topacity: 0.79;\r\n\t\tfont-size: 2.4rem;\r\n\t}\r\n`;\r\n\r\n// function calcHeight(scrollHeight: number): number {\r\n// \tconsole.log('scroll height:', scrollHeight);\r\n// \tif (!scrollHeight) return 170;\r\n// \t// Height / line height\r\n// \tconst lines = Math.ceil(scrollHeight / 25.6);\r\n// \t// min-height + lines x line-height + padding + border\r\n// \tconst newHeight = Math.ceil(lines * 25.6);\r\n// \tconsole.log(lines);\r\n// \treturn newHeight;\r\n// }\r\n\r\nexport default TextBox;\r\n","import styled from 'styled-components';\n\ninterface BtnIconProps {\n\tshow?: boolean;\n}\n\nconst BtnIcon = styled.button<BtnIconProps>`\n\tbackground: none;\n\tborder: none;\n\tcolor: inherit;\n\tcursor: pointer;\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 1.2rem;\n\ttext-align: center;\n\topacity: ${({ show = true }) => (show ? '1' : '0')};\n\tvisibility: ${({ show = true }) => (show ? 'visible' : 'hidden')};\n\ttransition: 0.3s ease-out;\n`;\n\nexport default BtnIcon;\n","import { MouseEvent, ReactElement, useState } from 'react';\r\nimport { MdStop } from 'react-icons/md';\r\nimport BtnIcon from './BtnIcon';\r\n\r\ninterface BtnWithPlayStateProps {\r\n\ticon: ReactElement;\r\n\tlabel?: string;\r\n\ttitle?: string;\r\n\tshow?: boolean;\r\n\tonClick: (onEnd: () => void) => void;\r\n\tonCancel: () => void;\r\n}\r\n\r\nfunction BtnWithPlayState({\r\n\ticon,\r\n\tlabel,\r\n\ttitle,\r\n\tshow,\r\n\tonClick,\r\n\tonCancel,\r\n}: BtnWithPlayStateProps) {\r\n\tconst [isPlaying, setPlaying] = useState(false);\r\n\r\n\tconst handlePlay = (e: MouseEvent<HTMLButtonElement>) => {\r\n\t\tsetPlaying(!isPlaying);\r\n\t\tif (isPlaying) {\r\n\t\t\tonCancel();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Esto cambia el icono de detener por el default\r\n\t\tonClick(() => {\r\n\t\t\tsetPlaying(false);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BtnIcon\r\n\t\t\t\tonClick={handlePlay}\r\n\t\t\t\tshow={show}\r\n\t\t\t\taria-label={label}\r\n\t\t\t\tdata-title={title}\r\n\t\t\t>\r\n\t\t\t\t{isPlaying ? <MdStop size=\"24\" color=\"currentColor\" /> : icon}\r\n\t\t\t</BtnIcon>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BtnWithPlayState;\r\n","import { ChangeEvent, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdClear, MdMic, MdVolumeUp } from 'react-icons/md';\r\nimport { TranslateBoxProps } from '../constants/languages';\r\nimport { TranslateContext } from '../context/TranslateContext';\r\nimport useSpeechSynthesis from '../hooks/useSpeechSynthesis';\r\nimport useSpeechRecognition from '../hooks/useSpeechRecognition';\r\nimport TextBox, { Actions, TextArea } from './TextBox';\r\nimport BtnIcon from './BtnIcon';\r\nimport BtnWithPlayState from './BtnWithPlayState';\r\n\r\nconst CharactersCounter = styled.span`\r\n\tmargin-left: auto;\r\n`;\r\n\r\nconst BtnClear = styled(BtnIcon)`\r\n\tpadding: 0.6rem;\r\n\tposition: absolute !important;\r\n\tright: 0;\r\n\ttop: 2rem;\r\n`;\r\n\r\nfunction SourceBox({ language }: TranslateBoxProps) {\r\n\t// const [text, setText] = useState('');\r\n\tconst charactersLimit = 2000;\r\n\r\n\tconst {\r\n\t\tsourceText: text,\r\n\t\tclearText,\r\n\t\tsetText,\r\n\t} = useContext(TranslateContext);\r\n\r\n\tconst handleChange = ({\r\n\t\tcurrentTarget,\r\n\t}: ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\tsetText(currentTarget.value.substring(0, charactersLimit));\r\n\t};\r\n\r\n\tconst [isSpeechSynthesisSupported, textToSpeech, cancelSpeechSynthesis] =\r\n\t\tuseSpeechSynthesis(text, language);\r\n\r\n\tconst [\r\n\t\tisSpeechRecognitionSupported,\r\n\t\tstartSpeechRecognition,\r\n\t\tabortSpeechRecognition,\r\n\t] = useSpeechRecognition(language, setText);\r\n\r\n\treturn (\r\n\t\t<TextBox>\r\n\t\t\t<BtnClear\r\n\t\t\t\tshow={text.length > 0}\r\n\t\t\t\taria-label=\"Clear source text\"\r\n\t\t\t\tdata-title=\"Clear source text\"\r\n\t\t\t\tdata-tooltip-pos=\"right\"\r\n\t\t\t\tonClick={clearText}\r\n\t\t\t>\r\n\t\t\t\t<MdClear size=\"24\" color=\"currentColor\" />\r\n\t\t\t</BtnClear>\r\n\t\t\t<TextArea\r\n\t\t\t\tmaxLength={charactersLimit}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvalue={text}\r\n\t\t\t\taria-label=\"Enter the source text\"\r\n\t\t\t/>\r\n\t\t\t<Actions>\r\n\t\t\t\t{isSpeechRecognitionSupported && (\r\n\t\t\t\t\t<BtnWithPlayState\r\n\t\t\t\t\t\ticon={<MdMic size=\"24\" color=\"currentColor\" />}\r\n\t\t\t\t\t\tlabel=\"Translate by voice\"\r\n\t\t\t\t\t\ttitle=\"Translate by voice\"\r\n\t\t\t\t\t\tonClick={startSpeechRecognition}\r\n\t\t\t\t\t\tonCancel={abortSpeechRecognition}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{isSpeechSynthesisSupported && (\r\n\t\t\t\t\t<BtnWithPlayState\r\n\t\t\t\t\t\ticon={<MdVolumeUp size=\"24\" color=\"currentColor\" />}\r\n\t\t\t\t\t\tlabel=\"Listen\"\r\n\t\t\t\t\t\tshow={text.length > 0}\r\n\t\t\t\t\t\ttitle=\"Listen\"\r\n\t\t\t\t\t\tonClick={textToSpeech}\r\n\t\t\t\t\t\tonCancel={cancelSpeechSynthesis}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<CharactersCounter>\r\n\t\t\t\t\t{text.length} / {charactersLimit}\r\n\t\t\t\t</CharactersCounter>\r\n\t\t\t</Actions>\r\n\t\t</TextBox>\r\n\t);\r\n}\r\n\r\nexport default SourceBox;\r\n","import { useContext, useRef } from 'react';\r\nimport { MdContentCopy, MdVolumeUp } from 'react-icons/md';\r\nimport { TranslateBoxProps } from '../constants/languages';\r\nimport { TranslateContext } from '../context/TranslateContext';\r\nimport useSpeechSynthesis from '../hooks/useSpeechSynthesis';\r\nimport * as clipboard from '../helpers/clipboard';\r\nimport TextBox, { Actions, TextArea } from './TextBox';\r\nimport BtnIcon from './BtnIcon';\r\nimport BtnWithPlayState from './BtnWithPlayState';\r\n\r\nfunction ResultBox({ language }: TranslateBoxProps) {\r\n\tconst { resultText } = useContext(TranslateContext);\r\n\r\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null!);\r\n\r\n\tconst [isSpeechSynthesisSupported, textToSpeech, cancelSpeechSynthesis] =\r\n\t\tuseSpeechSynthesis(resultText, language);\r\n\r\n\treturn (\r\n\t\t<TextBox>\r\n\t\t\t<TextArea\r\n\t\t\t\tref={textAreaRef}\r\n\t\t\t\tdefaultValue={resultText}\r\n\t\t\t\treadOnly={true}\r\n\t\t\t\tplaceholder=\"Translation\"\r\n\t\t\t\taria-label=\"Translation\"\r\n\t\t\t/>\r\n\t\t\t<Actions>\r\n\t\t\t\t{isSpeechSynthesisSupported && (\r\n\t\t\t\t\t<BtnWithPlayState\r\n\t\t\t\t\t\ticon={<MdVolumeUp size=\"24\" color=\"currentColor\" />}\r\n\t\t\t\t\t\tlabel=\"Listen\"\r\n\t\t\t\t\t\tshow={resultText.length > 0}\r\n\t\t\t\t\t\ttitle=\"Listen\"\r\n\t\t\t\t\t\tonClick={textToSpeech}\r\n\t\t\t\t\t\tonCancel={cancelSpeechSynthesis}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<BtnIcon\r\n\t\t\t\t\tshow={resultText.length > 0}\r\n\t\t\t\t\taria-label=\"Copy translation\"\r\n\t\t\t\t\tdata-title=\"Copy translation\"\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tclipboard.copy(resultText, textAreaRef.current)\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MdContentCopy size=\"24\" color=\"currentColor\" />\r\n\t\t\t\t</BtnIcon>\r\n\t\t\t</Actions>\r\n\t\t</TextBox>\r\n\t);\r\n}\r\n\r\nexport default ResultBox;\r\n","export const copy = (\r\n\ttext: string,\r\n\telement: HTMLInputElement | HTMLTextAreaElement\r\n): Promise<void> => {\r\n\tif (window.navigator.clipboard !== undefined) {\r\n\t\treturn window.navigator.clipboard.writeText(text);\r\n\t}\r\n\treturn new Promise((res) => {\r\n\t\telement.select();\r\n\t\twindow.document.execCommand('copy');\r\n\t\twindow.getSelection()?.removeAllRanges();\r\n\t\tres();\r\n\t});\r\n};\r\n","import { keyframes } from 'styled-components';\r\n\r\nexport const showAlertAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const hideAlertAnimation = keyframes`\r\n  from {\r\n    opacity: 1;\r\n   }\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n","import { ReactElement, ReactNode, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdErrorOutline, MdCheckCircle } from 'react-icons/md';\r\nimport { hideAlertAnimation, showAlertAnimation } from '../styles/animations';\r\n\r\ninterface BaseAlertProps {\r\n\tseverity: 'success' | 'error';\r\n\tshow?: boolean;\r\n}\r\n\r\ninterface AlertProps extends BaseAlertProps {\r\n\tchildren?: ReactNode;\r\n\ticon?: ReactElement;\r\n}\r\n\r\nconst colors = {\r\n\tsuccess: ['var(--color-success)', 'var(--color-bg-success)'],\r\n\terror: ['var(--color-error)', 'var(--color-bg-error)'],\r\n};\r\n\r\nconst StyledAlert = styled.div<BaseAlertProps>`\r\n\tz-index: 100;\r\n\tcolor: ${({ severity }) => colors[severity][0]};\r\n\tbackground-color: ${({ severity }) => colors[severity][1]};\r\n\tfont-weight: 400;\r\n\tletter-spacing: 0.01071em;\r\n\twidth: 100%;\r\n\tpadding: 1.4rem 1rem;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\t> :first-child {\r\n\t\tflex-shrink: 0;\r\n\t\tmargin-right: 1rem;\r\n\t}\r\n\tanimation: ${({ show }) => (show ? showAlertAnimation : hideAlertAnimation)}\r\n\t\t0.3s ease;\r\n`;\r\n\r\nconst AlertMessage = styled.span`\r\n\tfont-size: 1.4rem;\r\n`;\r\n\r\nconst icons = {\r\n\tsuccess: <MdCheckCircle size=\"22\" color=\"currentColor\" />,\r\n\terror: <MdErrorOutline size=\"22\" color=\"currentColor\" />,\r\n};\r\n\r\nfunction Alert({\r\n\tchildren,\r\n\ticon,\r\n\tseverity = 'success',\r\n\tshow = true,\r\n}: AlertProps) {\r\n\tconst [shouldRender, setRender] = useState(show);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (show) setRender(true);\r\n\t}, [show]);\r\n\r\n\tconst handleAnimationEnd = () => {\r\n\t\tif (!show) setRender(false);\r\n\t};\r\n\r\n\tif (!shouldRender) return null;\r\n\r\n\treturn (\r\n\t\t<StyledAlert\r\n\t\t\tonAnimationEnd={handleAnimationEnd}\r\n\t\t\trole=\"alert\"\r\n\t\t\tseverity={severity}\r\n\t\t\tshow={show}\r\n\t\t>\r\n\t\t\t{icon ? icon : icons[severity]}\r\n\t\t\t<AlertMessage>{children}</AlertMessage>\r\n\t\t</StyledAlert>\r\n\t);\r\n}\r\n\r\nexport default Alert;\r\n","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TranslateContext } from '../context/TranslateContext';\r\nimport Wrapper from './Wrapper';\r\nimport LanguagesBar from './LanguagesBar';\r\nimport SourceBox from './SourceBox';\r\nimport ResultBox from './ResultBox';\r\nimport Alert from './Alert';\r\n\r\nconst StyledTranslator = styled.main`\r\n\tmargin: 2rem 0;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n\tposition: relative;\r\n\tdisplay: grid;\r\n\tgap: 2rem;\r\n\t@media (min-width: 56.25em) {\r\n\t\tgap: 0;\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t}\r\n`;\r\n\r\nfunction Translator() {\r\n\tconst { isOnline, languageInfo, swapLanguages, setLanguageInfo } =\r\n\t\tuseContext(TranslateContext);\r\n\r\n\treturn (\r\n\t\t<StyledTranslator>\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Alert severity=\"error\" show={!isOnline}>\r\n\t\t\t\t\t\tThere seems to be a problem with the Internet\r\n\t\t\t\t\t\tconnection. Translator functionality may be limited.\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t\t<LanguagesBar\r\n\t\t\t\t\t\tsourceLanguage={languageInfo.source}\r\n\t\t\t\t\t\tresultLanguage={languageInfo.result}\r\n\t\t\t\t\t\tswapLanguages={swapLanguages}\r\n\t\t\t\t\t\tsetLanguageInfo={setLanguageInfo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SourceBox language={languageInfo.source} />\r\n\t\t\t\t\t<ResultBox language={languageInfo.result} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Wrapper>\r\n\t\t</StyledTranslator>\r\n\t);\r\n}\r\n\r\nexport default Translator;\r\n","import Header from '../components/Header';\nimport Translator from '../components/Translator';\n\nfunction HomePage() {\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<Translator />\n\t\t</div>\n\t);\n}\n\nexport default HomePage;\n","import { ThemeProvider } from './context/ThemeContext';\r\nimport { TranslateProvider } from './context/TranslateContext';\r\nimport GlobalStyles from './styles/globalStyles';\r\nimport HomePage from './pages/HomePage';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<ThemeProvider>\r\n\t\t\t<TranslateProvider>\r\n\t\t\t\t<GlobalStyles />\r\n\t\t\t\t<HomePage />\r\n\t\t\t</TranslateProvider>\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}