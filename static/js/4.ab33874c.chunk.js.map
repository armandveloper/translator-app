{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hooks/useOnline.ts","context/TranslateContext.tsx","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","useOnline","useState","window","navigator","onLine","isOnline","setOnline","useEffect","updateOnlineState","addEventListener","removeEventListener","TranslateContext","createContext","TranslateProvider","children","sourceText","setSourceText","resultText","setResultText","source","result","languageInfo","setLanguageInfo","hasLimitExceeded","setLimitExceeded","msgError","setError","apiKey","process","translate","useCallback","text","target","a","fetch","method","headers","body","JSON","stringify","q","res","status","json","data","translations","translatedText","console","error","timeoutID","useRef","clearTimeout","current","trim","setTimeout","substring","substr","Provider","clearText","setText","swapLanguages","aux","sourcetAux","module","exports","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply"],"mappings":"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","file":"static/js/4.ab33874c.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from 'react';\r\n\r\nconst useOnline = (): boolean => {\r\n\tconst [isOnline, setOnline] = useState(window.navigator.onLine);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst updateOnlineState = () => setOnline(window.navigator.onLine);\r\n\r\n\t\twindow.addEventListener('online', updateOnlineState);\r\n\t\twindow.addEventListener('offline', updateOnlineState);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('online', updateOnlineState);\r\n\t\t\twindow.removeEventListener('offline', updateOnlineState);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn isOnline;\r\n};\r\n\r\nexport default useOnline;\r\n","import {\r\n\tcreateContext,\r\n\tDispatch,\r\n\tReactNode,\r\n\tSetStateAction,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from 'react';\r\nimport LanguageList, { LanguageInfo } from '../constants/languages';\r\nimport { ITranslateResponse } from '../interfaces/translate.interface';\r\nimport useOnline from '../hooks/useOnline';\r\n\r\ninterface TranslateContextInt {\r\n\tlanguageInfo: LanguageInfo;\r\n\tmsgError: string;\r\n\tresultText: string;\r\n\tsourceText: string;\r\n\tclearText: () => void;\r\n\tsetLanguageInfo: Dispatch<SetStateAction<LanguageInfo>>;\r\n\tsetText: Dispatch<SetStateAction<string>>;\r\n\tswapLanguages: () => void;\r\n\ttranslate: (text: string, source: string, target: string) => Promise<void>;\r\n}\r\n\r\nexport const TranslateContext = createContext({} as TranslateContextInt);\r\n\r\nexport const TranslateProvider = ({ children }: { children: ReactNode }) => {\r\n\tconst [sourceText, setSourceText] = useState('');\r\n\r\n\tconst [resultText, setResultText] = useState('');\r\n\r\n\tconst [languageInfo, setLanguageInfo] = useState<LanguageInfo>({\r\n\t\tsource: 'en-US',\r\n\t\tresult: 'es-US',\r\n\t});\r\n\r\n\tconst [hasLimitExceeded, setLimitExceeded] = useState(false);\r\n\r\n\tconst [msgError, setError] = useState('');\r\n\r\n\tconst swapLanguages = (): void => {\r\n\t\tconst aux: LanguageList = languageInfo.source,\r\n\t\t\tsourcetAux: string = sourceText;\r\n\r\n\t\tsetLanguageInfo({ source: languageInfo.result, result: aux });\r\n\t\tsetSourceText(resultText);\r\n\t\t// Eliminar al agregar API\r\n\t\tsetResultText(sourcetAux);\r\n\t};\r\n\r\n\tconst clearText = () => setSourceText('');\r\n\r\n\tconst url = 'https://deep-translate1.p.rapidapi.com/language/translate/v2',\r\n\t\tapiKey = process.env.REACT_APP_API_KEY || '';\r\n\r\n\tconst translate = useCallback(\r\n\t\tasync (text: string, source: string, target: string): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await fetch(url, {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t'x-rapidapi-key': apiKey,\r\n\t\t\t\t\t\t'x-rapidapi-host': 'deep-translate1.p.rapidapi.com',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tq: text,\r\n\t\t\t\t\t\tsource,\r\n\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t}),\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 429) {\r\n\t\t\t\t\tsetLimitExceeded(true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status !== 200) {\r\n\t\t\t\t\tsetError('Something Went Wrong');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst result: ITranslateResponse = await res.json();\r\n\t\t\t\tsetResultText(result.data.translations.translatedText);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\tsetError('Something Went Wrong');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[apiKey]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (sourceText === '') setResultText('');\r\n\t}, [sourceText, translate]);\r\n\r\n\tconst timeoutID = useRef<number>(null!);\r\n\r\n\tconst isOnline = useOnline();\r\n\r\n\t// Mensajes de error\r\n\tuseEffect(() => {\r\n\t\tif (hasLimitExceeded) {\r\n\t\t\tsetError('You have exceeded the allowed character limit');\r\n\t\t} else if (!hasLimitExceeded) {\r\n\t\t\tsetError('');\r\n\t\t} else if (!isOnline) {\r\n\t\t\tsetError(\r\n\t\t\t\t'There seems to be a problem with the Internet connection. Translator functionality may be limited.'\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetError('');\r\n\t\t}\r\n\t}, [isOnline, hasLimitExceeded]);\r\n\r\n\t// Debouncer\r\n\tuseEffect(() => {\r\n\t\t// Limpia el timeout anterior\r\n\t\twindow.clearTimeout(timeoutID.current);\r\n\t\tif (hasLimitExceeded || !isOnline || !sourceText.trim()) return;\r\n\t\t// Si hay un término de mínimo 3 caracteres hace la llamada al api\r\n\t\ttimeoutID.current = window.setTimeout(() => {\r\n\t\t\ttranslate(\r\n\t\t\t\tsourceText,\r\n\t\t\t\tlanguageInfo.source.substring(0, 2),\r\n\t\t\t\tlanguageInfo.result.substr(0, 2)\r\n\t\t\t);\r\n\t\t}, 500);\r\n\t}, [hasLimitExceeded, isOnline, sourceText, translate, languageInfo]);\r\n\r\n\treturn (\r\n\t\t<TranslateContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tlanguageInfo,\r\n\t\t\t\tmsgError,\r\n\t\t\t\tresultText,\r\n\t\t\t\tsourceText,\r\n\t\t\t\tclearText,\r\n\t\t\t\tsetLanguageInfo,\r\n\t\t\t\tsetText: setSourceText,\r\n\t\t\t\tswapLanguages,\r\n\t\t\t\ttranslate,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</TranslateContext.Provider>\r\n\t);\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}