{"version":3,"sources":["styles/globalStyles.tsx","components/Switch.tsx","components/Wrapper.tsx","components/Header.tsx","components/LanguagesBar.tsx","styles/mixins.ts","components/TextBox.tsx","components/Translator.tsx","pages/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","StyledSwitch","styled","label","Switch","type","className","Wrapper","div","Title","h1","HeaderContent","Header","StyledBar","LanguageList","ul","LanguageItem","li","SwapLanguage","button","LanguagesBar","title","color","size","textBoxStyles","css","StyledBox","TextArea","textarea","TextBox","useState","text","setText","textAreaRef","useRef","value","onChange","target","ref","style","height","current","scrollHeight","StyledTranslator","main","Grid","Translator","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLA4BeA,EA1BMC,YAAH,ikB,OCAZC,EAAeC,IAAOC,MAAV,mdA+BHC,I,MAAAA,EATf,WACC,OACC,eAACH,EAAD,WACC,uBAAOI,KAAK,aACZ,sBAAMC,UAAU,qBCnBJC,EAPCL,IAAOM,IAAV,yGCEPC,EAAQP,IAAOQ,GAAV,yFAMLC,EAAgBT,IAAOM,IAAV,yGAmBJI,I,QAAAA,EAbf,WACC,OACC,iCACC,cAAC,EAAD,UACC,eAACD,EAAD,WACC,cAACF,EAAD,wBACA,cAAC,EAAD,Y,QCnBCI,EAAYX,IAAOM,IAAV,+KASTM,EAAeZ,IAAOa,GAAV,qKAWZC,EAAed,IAAOe,GAAV,qWAiBZC,EAAehB,IAAOiB,OAAV,6PAmCHC,I,MAAAA,EArBf,WACC,OACC,eAACP,EAAD,WACC,eAACC,EAAD,WACC,cAACE,EAAD,CAAcV,UAAU,WAAxB,6BAGA,cAACU,EAAD,sBACA,cAACA,EAAD,yBAED,cAACE,EAAD,CAAcG,MAAM,gBAApB,SACC,cAAC,IAAD,CAAaC,MAAM,eAAeC,KAAK,SAExC,eAACT,EAAD,WACC,cAACE,EAAD,sBACA,cAACA,EAAD,6B,QCnESQ,EAAgBC,YAAH,6HCGpBC,EAAYxB,IAAOM,IAAV,mCACZgB,GAGGG,EAAWzB,IAAO0B,SAAV,iUA+CCC,I,IAAAA,EAlBf,WAAoB,IAAD,EAClB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAcC,iBAA4B,MAEhD,OACC,cAACR,EAAD,UACC,cAACC,EAAD,CACCQ,MAAOJ,EACPK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBL,EAAQK,EAAOF,QACzCG,IAAKL,EACLM,MAAO,CACNC,OAAO,GAAD,iBAAKP,EAAYQ,eAAjB,aAAK,EAAqBC,aAA1B,YC5CLC,EAAmBzC,IAAO0C,KAAV,gDAIhBC,EAAO3C,IAAOM,IAAV,2JAuBKsC,MAdf,WACC,OACC,cAACH,EAAD,UACC,cAAC,EAAD,UACC,eAACE,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCbUE,MATf,WACC,OACC,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,QCKYC,MATf,WACC,OACC,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,QCOYC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.ee65ef98.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --color-bg: #121212;\n    --color-bg-3:#424242;\n    --color-text: #fff;\n    --color-primary: #5290f5;\n  }\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  body {\n    background-color: var(--color-bg);\n    color: var(--color-text);\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    line-height: 1.4;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyles;\n","import styled from 'styled-components';\n\nconst StyledSwitch = styled.label`\n\tbackground-color: #525252;\n\tborder-radius: 1rem;\n\twidth: 6rem;\n\theight: 2rem;\n\tpadding: 0.2rem;\n\t.switch-thumb {\n\t\tbackground-color: #fff;\n\t\tborder-radius: 50%;\n\t\tdisplay: block;\n\t\theight: 1.6rem;\n\t\twidth: 1.6rem;\n\t\ttransition: transform 0.3s ease-in;\n\t}\n\tinput[type='checkbox'] {\n\t\tdisplay: none;\n\t}\n\tinput[type='checkbox']:checked ~ .switch-thumb {\n\t\ttransform: translate3d(4rem, 0, 0);\n\t}\n`;\n\nfunction Switch() {\n\treturn (\n\t\t<StyledSwitch>\n\t\t\t<input type=\"checkbox\" />\n\t\t\t<span className=\"switch-thumb\" />\n\t\t</StyledSwitch>\n\t);\n}\n\nexport default Switch;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n\tmax-width: 124rem;\n\tmargin: 0 auto;\n\tpadding: 0 2rem;\n\twidth: 100%;\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\nimport Switch from './Switch';\nimport Wrapper from './Wrapper';\n\nconst Title = styled.h1`\n\tcursor: default;\n\tfont-size: 3rem;\n\tfont-weight: 500;\n`;\n\nconst HeaderContent = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<Wrapper>\n\t\t\t\t<HeaderContent>\n\t\t\t\t\t<Title>Translate</Title>\n\t\t\t\t\t<Switch />\n\t\t\t\t</HeaderContent>\n\t\t\t</Wrapper>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import styled from 'styled-components';\nimport { MdSwapHoriz } from 'react-icons/md';\n\nconst StyledBar = styled.div`\n\tgrid-column: 1 / -1;\n\tdisplay: flex;\n\tmargin-bottom: 3rem;\n\tpadding: 0 2rem;\n\tbox-shadow: 0 0 5px 2px #424242;\n\tborder-radius: 10rem;\n`;\n\nconst LanguageList = styled.ul`\n\tflex: 1;\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: flex;\n\t&:last-of-type {\n\t\tjustify-content: flex-end;\n\t}\n`;\n\nconst LanguageItem = styled.li`\n\tcursor: pointer;\n\tpadding: 0.8rem 1.5rem;\n\ttext-align: center;\n\tuser-select: none;\n\ttransition: background-color 0.3s ease;\n\tdisplay: inline-flex;\n\talign-items: center;\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: var(--color-bg-3);\n\t}\n\t&.selected {\n\t\tborder-bottom: 3px solid var(--color-primary);\n\t}\n`;\n\nconst SwapLanguage = styled.button`\n\tbackground-color: var(--color-primary);\n\tborder: none;\n\tborder-radius: 50%;\n\tcolor: #fff;\n\tcursor: pointer;\n\theight: 5rem;\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 5rem;\n\t/* position: relative;\n\ttop: -2rem; */\n`;\n\nfunction LanguagesBar() {\n\treturn (\n\t\t<StyledBar>\n\t\t\t<LanguageList>\n\t\t\t\t<LanguageItem className=\"selected\">\n\t\t\t\t\tDetect Language\n\t\t\t\t</LanguageItem>\n\t\t\t\t<LanguageItem>English</LanguageItem>\n\t\t\t\t<LanguageItem>Spanish</LanguageItem>\n\t\t\t</LanguageList>\n\t\t\t<SwapLanguage title=\"Swap Language\">\n\t\t\t\t<MdSwapHoriz color=\"currentColor\" size=\"28\" />\n\t\t\t</SwapLanguage>\n\t\t\t<LanguageList>\n\t\t\t\t<LanguageItem>English</LanguageItem>\n\t\t\t\t<LanguageItem>Spanish</LanguageItem>\n\t\t\t</LanguageList>\n\t\t</StyledBar>\n\t);\n}\n\nexport default LanguagesBar;\n","import { css } from 'styled-components';\n\nexport const textBoxStyles = css`\n\tborder-radius: 2.5rem;\n\tbox-shadow: 0 0 5px 2px #424242;\n\theight: auto;\n\tpadding: 2rem;\n`;\n","import { useState } from 'react';\nimport { useRef } from 'react';\nimport styled from 'styled-components';\nimport { textBoxStyles } from '../styles/mixins';\n\nconst StyledBox = styled.div`\n\t${textBoxStyles};\n`;\n\nconst TextArea = styled.textarea`\n\tbackground: none;\n\tcolor: var(--color-text);\n\tdisplay: block;\n\tfont-family: inherit;\n\tfont-size: 1.6rem;\n\tline-height: 1.6;\n\tmin-height: 17rem;\n\theight: auto;\n\tresize: none;\n\toverflow: hidden;\n\tpadding-bottom: 2rem;\n\twidth: 100%;\n\t&:focus {\n\t\toutline: none;\n\t}\n`;\n\n// function calcHeight(scrollHeight: number): number {\n// \tconsole.log('scroll height:', scrollHeight);\n// \tif (!scrollHeight) return 170;\n// \t// Height / line height\n// \tconst lines = Math.ceil(scrollHeight / 25.6);\n// \t// min-height + lines x line-height + padding + border\n// \tconst newHeight = Math.ceil(lines * 25.6);\n// \tconsole.log(lines);\n// \treturn newHeight;\n// }\n\nfunction TextBox() {\n\tconst [text, setText] = useState('');\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null!);\n\n\treturn (\n\t\t<StyledBox>\n\t\t\t<TextArea\n\t\t\t\tvalue={text}\n\t\t\t\tonChange={({ target }) => setText(target.value)}\n\t\t\t\tref={textAreaRef}\n\t\t\t\tstyle={{\n\t\t\t\t\theight: `${textAreaRef.current?.scrollHeight}px`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</StyledBox>\n\t);\n}\n\nexport default TextBox;\n","import styled from 'styled-components';\nimport Wrapper from './Wrapper';\nimport LanguagesBar from './LanguagesBar';\nimport TextBox from './TextBox';\n\nconst StyledTranslator = styled.main`\n\tmargin-top: 4em;\n`;\n\nconst Grid = styled.div`\n\tdisplay: grid;\n\tgap: 2rem;\n\t@media (min-width: 56.25em) {\n\t\tgap: 0;\n\t\tgrid-template-columns: repeat(2, 1fr);\n\t}\n`;\n\nfunction Translator() {\n\treturn (\n\t\t<StyledTranslator>\n\t\t\t<Wrapper>\n\t\t\t\t<Grid>\n\t\t\t\t\t<LanguagesBar />\n\t\t\t\t\t<TextBox />\n\t\t\t\t\t<TextBox />\n\t\t\t\t</Grid>\n\t\t\t</Wrapper>\n\t\t</StyledTranslator>\n\t);\n}\n\nexport default Translator;\n","import Header from '../components/Header';\nimport Translator from '../components/Translator';\n\nfunction HomePage() {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Translator />\n\t\t</>\n\t);\n}\n\nexport default HomePage;\n","import GlobalStyles from './styles/globalStyles';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyles />\n\t\t\t<HomePage />\n\t\t</>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}